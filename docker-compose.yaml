version: '3.8'

services:
  db:
    image: 'postgres:13'
    container_name: taiga-db
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - 'taiga-db-data:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - taiga-network

  redis:
    image: 'redis:6'
    container_name: taiga-redis
    restart: unless-stopped
    networks:
      - taiga-network

  back:
    image: 'taigaio/taiga-back:latest'
    container_name: taiga-back
    depends_on:
      - db
      - redis
    environment:
      # Database configuration
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Taiga configuration
      TAIGA_SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
      TAIGA_SITES_SCHEME: http
      TAIGA_SITES_DOMAIN: "owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io"
      TAIGA_MEDIA_URL: "http://owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io/media/"
      TAIGA_STATIC_URL: "http://owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io/static/"
      
      # Admin user (for first login)
      TAIGA_ADMIN_USERNAME: admin
      TAIGA_ADMIN_PASSWORD: admin123
      TAIGA_ADMIN_EMAIL: admin@example.com
      
      # Email configuration (using console for development)
      EMAIL_BACKEND: console
    volumes:
      - 'taiga-media:/taiga-back/media'
      - 'taiga-static:/taiga-back/static'
    restart: unless-stopped
    networks:
      - taiga-network

  front:
    image: 'taigaio/taiga-front:latest'
    container_name: taiga-front
    depends_on:
      - back
    environment:
      # API connectivity (uses internal Docker network)
      TAIGA_API_URL: 'http://back:8000/api/v1/'
      TAIGA_WEBSOCKETS_URL: 'ws://back:8000/events'
    restart: unless-stopped
    networks:
      - taiga-network
    labels:
      coolify.enable: "true"
      coolify.domain: "gkw00s08o4kc80sogqk88ocg.95.217.187.120.sslip.io"
      traefik.enable: "true"
      traefik.http.routers.taiga-front.rule: "Host(`gkw00s08o4kc80sogqk88ocg.95.217.187.120.sslip.io`)"
      traefik.http.services.taiga-front.loadbalancer.server.port: "80"

  # Modified nginx configuration for better proxy integration
  nginx:
    image: 'nginx:alpine'
    container_name: taiga-nginx
    depends_on:
      - front
      - back
    command: |
      /bin/sh -c "echo 'server {
          listen 80;
          server_name _;
          client_max_body_size 100M;

          # Frontend - root path
          location / {
              proxy_pass http://front:80;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
          }

          # Backend API
          location /api/ {
              proxy_pass http://back:8000/api/;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
          }

          # Admin
          location /admin/ {
              proxy_pass http://back:8000/admin/;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
          }

          # Static files
          location /static/ {
              proxy_pass http://back:8000/static/;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
          }

          # Media files
          location /media/ {
              proxy_pass http://back:8000/media/;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
          }

          # WebSockets
          location /events {
              proxy_pass http://back:8000/events;
              proxy_http_version 1.1;
              proxy_set_header Upgrade \$http_upgrade;
              proxy_set_header Connection \"upgrade\";
              proxy_set_header Host \$host;
          }
      }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - taiga-network
    labels:
      coolify.enable: "true"
      coolify.domain: "owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io"
      traefik.enable: "true"
      traefik.http.routers.taiga-nginx.rule: "Host(`owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io`)"
      traefik.http.services.taiga-nginx.loadbalancer.server.port: "80"

networks:
  taiga-network:
    driver: bridge

volumes:
  taiga-db-data:
  taiga-media:
  taiga-static:
