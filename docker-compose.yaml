version: '3.8'

services:
  db:
    image: 'postgres:13'
    container_name: taiga-db
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres 
      POSTGRES_PASSWORD: postgres123
    volumes:
      - 'taiga-db-data:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - taiga-network

  redis:
    image: 'redis:6'
    container_name: taiga-redis
    restart: unless-stopped
    networks:
      - taiga-network

  back:
    image: 'taigaio/taiga-back:latest'
    container_name: taiga-back
    depends_on:
      - db
      - redis
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TAIGA_SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
      TAIGA_SITES_SCHEME: http
      TAIGA_SITES_DOMAIN: "95.217.187.120:9000"
      TAIGA_MEDIA_URL: "http://95.217.187.120:9000/media/"
      TAIGA_STATIC_URL: "http://95.217.187.120:9000/static/"
      TAIGA_ADMIN_USERNAME: admin
      TAIGA_ADMIN_PASSWORD: admin123
      TAIGA_ADMIN_EMAIL: admin@example.com
      EMAIL_BACKEND: console
    volumes:
      - 'taiga-media:/taiga-back/media'
      - 'taiga-static:/taiga-back/static'
    ports:
      - "9001:8000"
    restart: unless-stopped
    networks:
      - taiga-network

  front:
    image: 'taigaio/taiga-front:latest'
    container_name: taiga-front
    depends_on:
      - back
    environment:
      TAIGA_API_URL: 'http://back:8000/api/v1/'
      TAIGA_WEBSOCKETS_URL: 'ws://back:8000/events'
    ports:
      - "9002:80"
    restart: unless-stopped
    networks:
      - taiga-network

  # Use a custom build for nginx
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: taiga-nginx
    depends_on:
      - front
      - back
    ports:
      - "9000:80"
    restart: unless-stopped
    networks:
      - taiga-network
    labels:
      coolify.managed: "true"
      coolify.default: "true"

networks:
  taiga-network:
    driver: bridge

volumes:
  taiga-db-data:
  taiga-media:
  taiga-static:
  
