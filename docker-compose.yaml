version: '3.8'

services:
  db:
    image: 'postgres:13'
    container_name: taiga-db
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - 'taiga-db-data:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - taiga-network

  redis:
    image: 'redis:6'
    container_name: taiga-redis
    restart: unless-stopped
    networks:
      - taiga-network

  back:
    image: 'taigaio/taiga-back:latest'
    container_name: taiga-back
    depends_on:
      - db
      - redis
    environment:
      # Database configuration
      POSTGRES_DB: taiga
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Taiga configuration
      TAIGA_SECRET_KEY: j5_e4atjh#mo)f9olk@i!jkk=7e5!$b(yd!v6*0rx$7bq(9lwl
      TAIGA_SITES_SCHEME: http
      TAIGA_SITES_DOMAIN: "owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io"
      TAIGA_MEDIA_URL: "http://owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io/media/"
      TAIGA_STATIC_URL: "http://owcccc8cogsksgc0wkwgccwc.95.217.187.120.sslip.io/static/"
      
      # Admin user (for first login)
      TAIGA_ADMIN_USERNAME: admin
      TAIGA_ADMIN_PASSWORD: admin123
      TAIGA_ADMIN_EMAIL: admin@example.com
      
      # Email configuration (using console for development)
      EMAIL_BACKEND: console
    volumes:
      - 'taiga-media:/taiga-back/media'
      - 'taiga-static:/taiga-back/static'
    # Explicitly expose the backend port
    ports:
      - "9001:8000"
    restart: unless-stopped
    networks:
      - taiga-network
    # Add specific labels for Coolify
    labels:
      coolify.expose: "9001:8000"

  front:
    image: 'taigaio/taiga-front:latest'
    container_name: taiga-front
    depends_on:
      - back
    environment:
      # API connectivity (uses internal Docker network)
      TAIGA_API_URL: 'http://back:8000/api/v1/'
      TAIGA_WEBSOCKETS_URL: 'ws://back:8000/events'
    # Explicitly expose the frontend port
    ports:
      - "9002:80"
    restart: unless-stopped
    networks:
      - taiga-network
    # Add specific labels for Coolify
    labels:
      coolify.expose: "9002:80"

  # Simplify the nginx configuration - just handle routing
 nginx:
  image: 'nginx:alpine'
  container_name: taiga-nginx
  depends_on:
    - front
    - back
  ports:
    - "9000:80"
  command: |
    /bin/sh -c "echo 'server {
        listen 80;
        server_name _;
        client_max_body_size 100M;

        # Frontend - root path
        location / {
            proxy_pass http://front:80;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }

        # Backend API
        location /api/ {
            proxy_pass http://back:8000/api/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }

        # Admin
        location /admin/ {
            proxy_pass http://back:8000/admin/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }

        # Static files
        location /static/ {
            proxy_pass http://back:8000/static/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }

        # Media files
        location /media/ {
            proxy_pass http://back:8000/media/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }

        # WebSockets
        location /events {
            proxy_pass http://back:8000/events;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection \"upgrade\";
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }
    }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  restart: unless-stopped
  networks:
    - taiga-network
  labels:
    coolify.expose: "9000:80"
    coolify.enable: "true"

networks:
  taiga-network:
    driver: bridge
    # Connect to the Coolify network
    external: false

volumes:
  taiga-db-data:
  taiga-media:
  taiga-static:
